{
  "hash": "7bc51228374fa833cbe7315e16fd7276",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: 'Premier League Performance Metrics and Results: A Dynamic Analysis'\nsubtitle: INFO 523 - Spring 2023 - Project 1\nauthor: 'Tejas Bhawari, Gabriel Geffen, Ayesha Khatun, Alyssa Nether, Akash Srinivasan'\ntitle-slide-attributes:\n  data-background-image: images/stadium.jpg\n  data-background-size: stretch\n  data-background-opacity: '0.8'\n  data-slide-number: none\nformat:\n  revealjs:\n    transition: concave\n    background-transition: fade\n    scrollable: true\n    code-block-height: 1000px\n    code-tools: true\n    code-block-bg: true\n    code-block-border-left: blue\n    theme:\n      - white\n      - data/customtheming.scss\neditor: visual\nexecute:\n  warning: false\n  message: false\n  echo: false\n---\n\n\n\n\n\n# Question 1\n\n## What is the connection between in-game metrics such as shots on goal, fouls committed, and cards received, and the outcomes of soccer matches?\n\n#### Approach\n\nWe choose relevant attributes such as shots, shots on goal, fouls committed, and cards both the home and away teams have earned. To guarantee the robustness of the model, the dataset is divided into training and testing sets. The logistic regression model is then trained, and its effectiveness is assessed using an accuracy score and a confusion matrix.\n\n## Exploring the complex connections between in-game metrics\n\n::: panel-tabset\n### Critical variables\n\n-   **FTHG** and **FTAG** are crucial indicators\n-   **FTR** serves as the target variable\n-   **HS**, **AS**, **HST**,and **AST** reflect attacking performance.\n-   **HF**, **AF**, **HY**, **AY**, **HR**,and **AR** all indicate team discipline and aggresion\n\n### Data preparation\n\n-   Combining match information with team-level season summaries\n-   The consistency of the dataset ensures reliability of our analysis\n\n::: {#c5f03b80 .cell execution_count=4}\n``` {.python .cell-code}\n# Load the dataset\ndf = pd.read_csv('data/soccer21-22.csv')\n\n# Creating a binary target variable 'Result' \n# 1 represents a home win ('H') and 0 otherwise\ndf['Result'] = (df['FTR'] == 'H').astype(int)\n\n# Feature selection\nfeatures = ['HS', 'AS', 'HST', 'AST', 'HF', 'AF', 'HY', 'AY', 'HR', 'AR']\nX = df[features]\ny = df['Result']\n```\n:::\n\n\n### Analysis\n\n-   Splitting data into appropriate sets then applying regression techniques\n-   Regression techniques, confusion matrix, and feature correlation heatmap\n-   Discovering patterns and relationships critical for building predictive models\n:::\n\n## Feature Importance Visualization\n\n![](images/image1.png){.nostretch fig-align=\"center\" width=\"725px\"}\n\n## Confusion Matrix\n\n![](images/Image2.png){.nostretch fig-align=\"center\" width=\"725px\"}\n\n## Feature Correlation Heatmap\n\n![](images/image3.png){.nostretch fig-align=\"center\" width=\"725px\"}\n\n# Question 2\n\n## What if the matches ended at halftime?\n\n::: panel-tabset\n### Critical variables\n\n-   **FTHG** and **FTAG** are needed to determine team placements\n-   **FTR** denotes the final actual outcome\n-   **HTHG**, **HTAG**,and **HTR** are important as well\n-   **HomeTeam** and **AwayTeam** combined with the rest help determine the winner\n\n### Data preparation\n\n-   Performing thorough checks and creating visualizations.\n-   Making sure data has no missing values\n\n### Analysis\n\n-   Creating a function to determine results of matches at halftime and using this re-calibration as a new baseline of analysis.\n-   Chronologically organized data\n:::\n\n## Code\n\n::: {#700f83dc .cell execution_count=5}\n``` {.python .cell-code code-fold=\"false\" code-summary=\"Data Prep & Pre-processing\"}\n# Import libraries\nimport pandas as pd\n\n# Load the dataset\ndf = pd.read_csv('data/soccer21-22.csv')\n\n# Function to determine the winner based on points\ndef calculate_points(row):\n    if row['FTR'] == 'H':\n        return 3\n    elif row['FTR'] == 'D':\n        return 1\n    else:\n        return 0\n\n# Apply the function to calculate points for each match\ndf['HomePoints'] = df.apply(lambda row: calculate_points(row), axis = 1)\ndf['AwayPoints'] = df.apply(lambda row: 3 - calculate_points(row) if row['FTR'] != 'D' else 1, axis = 1)\n\n# Aggregate points for each team\nhome_points = df.groupby('HomeTeam')['HomePoints'].sum().reset_index()\naway_points = df.groupby('AwayTeam')['AwayPoints'].sum().reset_index()\n\n# Combine home and away points\nteam_points = pd.merge(home_points, away_points, how = 'outer', left_on = 'HomeTeam', right_on = 'AwayTeam')\nteam_points['TotalPoints'] = team_points['HomePoints'] + team_points['AwayPoints']\n\n# Sort team_points DataFrame based on TotalPoints\nteam_points = team_points.sort_values(by = 'TotalPoints', ascending = False)\n\n# Create ranking DataFrame\nft_ranking = pd.DataFrame({\n    'Team': team_points['HomeTeam'],  # You can choose 'HomeTeam' or 'AwayTeam' because they are the same after merging\n    'Points': team_points['TotalPoints'],\n    'Ranking': range(1, len(team_points) + 1)\n})\n```\n:::\n\n\n## Plots\n\n::: panel-tabset\n###### Full-Time\n\n![](images/fifa1.png){.nostretch fig-align=\"center\" width=\"700px\"}\n\n###### Half-Time\n\n![](images/fifa2_v2.png){.nostretch fig-align=\"center\" width=\"700px\"}\n:::\n\n## References\n\n\\[1\\] Title: English Premier League Dataset, Source: tidytuesday, Link: <https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-04-04/soccer21-22.csv>\n\n\\[2\\] Quarto, For documentation and presentation - [Quarto](https://quarto.org/docs/reference/formats/html.html)\n\n# Discussion\n\nOverall, the insights derived from this analysis can offer valuable guidance for teams undergoing significant shifts in rankings. By identifying potential areas for improvement, such as halftime strategies, conditioning, or tactical adjustments, teams can make informed decisions to enhance their performance and competitiveness in professional football leagues.\n\n# \n\n![](images/suui.gif){.nostretch fig-align=\"center\" width=\"30000px\"}\n\n",
    "supporting": [
      "presentation_files\\figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}